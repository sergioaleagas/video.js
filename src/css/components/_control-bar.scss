
/* Show the controls (hidden at the start by default) */
.video-js .vjs-control-bar { 
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

// New style for Control Bar BackGround, no need to
/* Control Bar New Position and BackgroundColor */
.video-js .vjs-control-bar {
  /*background-color: rgba(38, 38, 38, 0.9);*/
  position: absolute;
  width: auto;
  left: 1em;
  right: 1em;
  bottom: 2em;
  border-radius: 0.5em;
  align-items: center;
  display: none;
}

.video-js .vjs-control-bar:hover .vjs-progress-control {
  opacity: 1;
  top: -2.5em;
}

.video-js .vjs-control-bar .vjs-menu {
  z-index: 2;
  height: 100%;
}

/*
Old Position

.video-js .vjs-control-bar {
  display: none;
  width: 100%;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 3.0em;

  @include background-color-with-alpha($primary-background-color, $primary-background-transparency);
}
*/
// Locks the display only if:
//  - controls are not disabled
//  - native controls are not used
//  - there is no error
.video-js:not(.vjs-controls-disabled, .vjs-using-native-controls, .vjs-error) .vjs-control-bar.vjs-lock-showing {
  display: flex !important;
}

// Video has started playing or we are in audioOnlyMode
//New style for control bar, opacity
.vjs-has-started .vjs-control-bar,
.vjs-audio-only-mode .vjs-control-bar {
  @include display-flex;
  visibility: visible;
  //opacity: 1;
  opacity: 0.8;

  $trans: visibility 0.1s, opacity 0.1s; // Var needed because of comma
  @include transition($trans);
}

// Video has started playing AND user is inactive
.vjs-has-started.vjs-user-inactive.vjs-playing .vjs-control-bar {
  // Remain visible for screen reader and keyboard users
  visibility: visible;
  opacity: 0;
  // prevent a click/tap from interacting with vjs-lock-showing menu's
  // or other controls while we are inactive/hidden
  pointer-events: none;

  $trans: visibility 1.0s, opacity 1.0s;
  @include transition($trans);

}

.vjs-controls-disabled .vjs-control-bar,
.vjs-using-native-controls .vjs-control-bar,
.vjs-error .vjs-control-bar {
  // !important is ok in this context.
  display: none !important;
}

// Don't hide the control bar if it's audio or in audioOnlyMode
.vjs-audio.vjs-has-started.vjs-user-inactive.vjs-playing .vjs-control-bar,
.vjs-audio-only-mode.vjs-has-started.vjs-user-inactive.vjs-playing .vjs-control-bar {
  opacity: 1;
  visibility: visible;
  pointer-events: auto;
}
